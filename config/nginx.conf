# ./config/nginx.conf

# This nginx configuration file passes traffic upstream, configures SSL/TLS
# and passes some headers used by the upstream application

user nginx nginx;
worker_processes 2;
error_log /var/log/nginx/error.log;
worker_rlimit_nofile 8192;

events {
    worker_connections 4096;
}

http {
    # Default settings

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    # End of default settings

    # Set the cache and timeout for ssl
    ssl_session_cache         shared:SSL:10m;
    ssl_session_timeout       10m;

    # Proxy to our application
    upstream application {
        server 127.0.0.1:8000;
    }

    # Create permanent redirect to https
    server {
        	listen 80 default_server;
        	listen [::]:80 default_server;
        	server_name localhost;
        	return 301 https://localhost$request_uri;
    }

    # Create https server listening on 443
    server {
          listen      443 ssl;
          listen      [::]:443 ssl;
          server_name localhost;
          ssl          on;
          #access_log  off;
          #error_log   off;

          # Configure SSL/TLS using self signed cert
          ssl_certificate      /etc/nginx/ssl/self-signed.crt;
          ssl_certificate_key  /etc/nginx/ssl/self-signed.key;

          # Let it know which ciphers and protocols to use
          ssl_prefer_server_ciphers on;
          ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
          ssl_ciphers               ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;

          keepalive_timeout         70;

          add_header Strict-Transport-Security “max-age=3153600”;

          # Send traffic to our application
           location / {
              proxy_pass http://application;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
           }
    }
}
